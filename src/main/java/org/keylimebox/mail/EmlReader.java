/*======================================================================================*/
/*                                  Package Definition                                  */
/*======================================================================================*/

package org.keylimebox.mail;

/*======================================================================================*/
/*                                       Imports                                        */
/*======================================================================================*/

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Properties;

import javax.mail.Session;
import javax.mail.internet.MimeMessage;

/*======================================================================================*/
/*                           Class Definition / Implementation                          */
/*======================================================================================*/
/*======================================================================================*/
/* CLASS:       EmlReader                                                               */
/**
 * Reads an EML file and outputs the parsed content to the console.
 * <p>
 * @author      etiennel
 * @since       Dec 7, 2014
 */
/*======================================================================================*/
@SuppressWarnings ("nls")
public class EmlReader
{

    /*==================================================================================*/
    /*===================================            ===================================*/
    /*=================================== Attributes ===================================*/
    /*===================================            ===================================*/
    /*==================================================================================*/

    /*==================================================================================*/
    /* Protected Attributes                                                             */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Private Attributes                                                               */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Class Attributes                                                                 */
    /*==================================================================================*/
        /*==============================================================================*/
        /* Constants                                                                    */
        /*==============================================================================*/

        /*==============================================================================*/
        /* Variables                                                                    */
        /*==============================================================================*/

    /*==================================================================================*/
    /*===================================            ===================================*/
    /*=================================== Operations ===================================*/
    /*===================================            ===================================*/
    /*==================================================================================*/

    /*==================================================================================*/
    /* Static initializer                                                               */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Constructors                                                                     */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Attribute Get Operations                                                         */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Attribute Set Operations                                                         */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Private Operations                                                               */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Protected Operations                                                             */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Package Operations                                                               */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Public Operations                                                                */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Abstract Operations (definitions)                                                */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Abstract Operations (implementations)                                            */
    /*==================================================================================*/

    /*==================================================================================*/
    /* Class (static) Operations                                                        */
    /*==================================================================================*/

         /*=============================================================================*/
         /* OPERATION:   main                                                           */
         /**
          * Argument 1 is the path to the EML file.
          * <p>
          * @param args
          * <p>
          * @since Dec 7, 2014
          */
         /*=============================================================================*/
   public static void main (String[] args)
   {
      InputStream mySource = null;
      try {
         Properties props = System.getProperties();
         props.put("mail.host", "smtp.dummydomain.com");
         props.put("mail.transport.protocol", "smtp");
         Session myMailSession = Session.getDefaultInstance(props, null);

         File myFile = new File (args[0]);
         mySource                = new FileInputStream(myFile);
         MimeMessage myMessage   = new MimeMessage (myMailSession, mySource);

         EmailMessage myEmail    = new EmailMessage (myMessage);

         for (EmailAddress myAddress : myEmail.getTo ()) {
            System.out.println ("To: " + myAddress.getDisplay ());
         }
         for (EmailAddress myAddress : myEmail.getCc ()) {
            System.out.println ("Cc: " + myAddress.getDisplay ());
         }
         for (EmailAddress myAddress : myEmail.getBcc ()) {
            System.out.println ("Bcc: " + myAddress.getDisplay ());
         }
         for (EmailAddress myAddress : myEmail.getFrom ()) {
            System.out.println ("From: " + myAddress.getDisplay ());
         }
         System.out.println ("Date: " + myEmail.getDate ().toString ());

         System.out.println ("Has Attachments? " + myEmail.hasAttachments ());
         for (EmailAttachment myAtt : myEmail.getAttachments ()) {
            System.out.println ("Attachment #" + myAtt.getPartNumber () + " - Filename: " + myAtt.getFileName () + "; Type: " + myAtt.getType () + "; Disposition: " + myAtt.getDisposition ());
         }
         System.out.println ("Body:");
         System.out.println (myEmail.getBody ());

         System.out.println ("Body Plain Text:");
         System.out.println (myEmail.getTextBody ());

      }
      catch (Throwable myThrowable) {
         myThrowable.printStackTrace ();
         if (mySource != null) {
            try {
               mySource.close ();
            } catch (IOException myException) {
               // TODO (etiennel) Auto-generated method stub
               myException.printStackTrace();
            }
         }
      }




   }


}

// EOF  EmlReader.java
